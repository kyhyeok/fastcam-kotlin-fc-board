<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.fastcompus.fcboard.service.PostServiceTest" tests="13" skipped="0" failures="0" errors="0" timestamp="2024-12-02T01:26:59" hostname="gim-yunhyeog-ui-MacBookPro.local" time="1.631">
  <properties/>
  <testcase name="Then: 게시글이 정상적으로 생성됨을 확인한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.061"/>
  <testcase name="Then: 태그가 정상적으로 추가됨을 확인한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.0"/>
  <testcase name="Then: 게시글이 정상적으로 수정됨을 확인한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.049"/>
  <testcase name="Then: 게시글을 찾을 수 없다라는 예외가 발생한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.031"/>
  <testcase name="Then: 수정할 수 없는 게시물 입니다. 예외가 발생한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.05"/>
  <testcase name="Then: 게시글이 정상적으로 삭제됨을 확인한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.047"/>
  <testcase name="Then: 삭제할 수 없는 게시물입니다. 예외가 발생한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.029"/>
  <testcase name="Then: 게시글의 내용이 정상적으로 반환됨을 확인한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.001"/>
  <testcase name="Then: 게시글을 찾을 수 없다라는 예외가 발생한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.044"/>
  <testcase name="Then: 댓글이 함께 조회됨을 확인한다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.001"/>
  <testcase name="Then: 게시글 페이지가 반환된다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.002"/>
  <testcase name="Then: 타이틀에 해당하는 게시글을 반환된다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.0"/>
  <testcase name="Then: 작성자에 해당하는 게시글이 반환된다." classname="com.fastcompus.fcboard.service.PostServiceTest" time="0.0"/>
  <system-out><![CDATA[2024-12-02T10:26:59.002+09:00  INFO 52387 --- [er @coroutine#3] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.fastcompus.fcboard.service.PostServiceTest]: PostServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2024-12-02T10:26:59.004+09:00  INFO 52387 --- [er @coroutine#3] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.fastcompus.fcboard.FcBoardApplication for test class com.fastcompus.fcboard.service.PostServiceTest
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    update
        post 
    set
        content=?,
        created_at=?,
        created_by=?,
        title=?,
        updated_at=?,
        updated_by=? 
    where
        id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        comment c1_0 
    where
        c1_0.post_id=?
Hibernate: 
    select
        t1_0.post_id,
        t1_0.id,
        t1_0.created_at,
        t1_0.created_by,
        t1_0.name,
        t1_0.updated_at,
        t1_0.updated_by 
    from
        tag t1_0 
    where
        t1_0.post_id=?
Hibernate: 
    delete 
    from
        post 
    where
        id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        post
        (content,created_at,created_by,title,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        comment c1_0 
    where
        c1_0.post_id=?
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    insert 
    into
        comment
        (content,created_at,created_by,post_id,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        comment
        (content,created_at,created_by,post_id,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    insert 
    into
        comment
        (content,created_at,created_by,post_id,updated_at,updated_by) 
    values
        (?,?,?,?,?,?)
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.id=?
Hibernate: 
    select
        c1_0.post_id,
        c1_0.id,
        c1_0.content,
        c1_0.created_at,
        c1_0.created_by,
        c1_0.updated_at,
        c1_0.updated_by 
    from
        comment c1_0 
    where
        c1_0.post_id=?
Hibernate: 
    select
        count(p1_0.id) 
    from
        post p1_0
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    order by
        p1_0.created_at desc limit ?,
        ?
Hibernate: 
    select
        count(p1_0.id) 
    from
        post p1_0 
    where
        p1_0.title like ? escape '!'
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.title like ? escape '!' 
    order by
        p1_0.created_at desc limit ?,
        ?
Hibernate: 
    select
        count(p1_0.id) 
    from
        post p1_0 
    where
        p1_0.created_by=?
Hibernate: 
    select
        p1_0.id,
        p1_0.content,
        p1_0.created_at,
        p1_0.created_by,
        p1_0.title,
        p1_0.updated_at,
        p1_0.updated_by 
    from
        post p1_0 
    where
        p1_0.created_by=? 
    order by
        p1_0.created_at desc limit ?,
        ?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
